name: Tests

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.22.x'
    - name: Check out code
      uses: actions/checkout@v2
    - name: Install dependencies
      run: go get ./...
    - name: Run Unit tests
      run: |
        go test -v -covermode atomic -coverprofile="coverage.out" ./...
        go tool cover -func="coverage.out"

  lint:
    name: Run linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.x'
      - name: Install dependencies
        run: |
          go get ./...
          go install honnef.co/go/tools/cmd/staticcheck@latest
          go install github.com/gordonklaus/ineffassign@latest
          go install github.com/fzipp/gocyclo/cmd/gocyclo@latest
      - name: Check format
        run: |
          if gofmt -e -l . >&1 | grep '^'; then
            exit 1
          fi
      - name: Lint with vet
        run: go vet ./...
      - name: Lint with staticcheck
        run: staticcheck ./...
      - name: Lint with ineffassign
        run: ineffassign ./...
      - name: Lint with gocyclo
        run: gocyclo -over 15 .

  cli-tests:
    name: Test CLI examples
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.22.x'
    - name: Check out code
      uses: actions/checkout@v2
    - name: Install dependencies
      run: go get ./...
    - name: Run Countries
      run: |
        go run ./cmd/som train _examples/countries/untrained.yml _examples/countries/data.csv > trained.yml
        go run ./cmd/som export trained.yml
        go run ./cmd/som bmu trained.yml _examples/countries/data.csv -p Country,code,continent
    - name: Run Iris
      run: |
        go run ./cmd/som train _examples/iris/untrained.yml _examples/iris/data.csv > trained.yml
        go run ./cmd/som export trained.yml
        go run ./cmd/som bmu trained.yml _examples/iris/data.csv -p species
